rarer_clinvar<-read_tsv("/media/axel/Dateien/Arbeit_Gen/TNAMSE_Paper/turro_gene_list/3plot_it/clinvar_rarer_genes4.tsv")
clinvar_new<-read_tsv("/media/axel/Dateien/Arbeit_Gen/TNAMSE_Paper/turro_gene_list/3plot_it/clinvar_new.tsv")
CV_test_complete_temp<-CV_test_complete[-train3,]# %>% filter(pLI<0.9)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(gene %in% clinvar_new$HGNC_gene_name)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(gene %in% rarer_clinvar$HGNC_gene_name)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(!gene %in% cv_18_prot$gene, gene %in% cv_ids21prot$gene,  !key_var %in% cv_18_prot$key_var, !key_var_id %in% cv_18_vars$key_var_id)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted), print.auc = TRUE,
col = "blue", print.auc.y = .2, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted_con), print.auc = TRUE,
col = "green", print.auc.y = .1, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted5), print.auc = TRUE,
col = "yellow", print.auc.y = .5, add = TRUE)
cv_all<-clinvar_variants[complete.cases(clinvar_variants %>% dplyr::select( colnames(dataset_train)[colnames(dataset_train) %in% select_merged])),]
cv_all$predicted<-predict(model1, cv_all )$predictions
cv_all$predicted_con<-predict(model_con, cv_all )$predictions
#cv_all$predicted2<-predict(model2, cv_all )
cv_all$predicted3<-predict(model3, cv_all )
cv_all$predicted4<-predict(model4, cv_all )
cv_all$predicted5<-predict(model5, cv_all )
#roc_rose <- plot(roc(cv_all$outcome, cv_all$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(cv_all$outcome, cv_all$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .4)
roc_rose <- plot(roc(cv_all$outcome, cv_all$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .6, add = TRUE)
roc_rose <- plot(roc(cv_all$outcome, cv_all$predicted5), print.auc = TRUE,
col = "blue", print.auc.y = .2, add = TRUE)
roc_rose <- plot(roc(cv_all$outcome, cv_all$predicted), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
roc_rose <- plot(roc(cv_all$outcome, cv_all$predicted_con), print.auc = TRUE,
col = "brown", print.auc.y = .1, add = TRUE)
model1<-ranger(outcome ~ . , data=dataset_train %>% dplyr::select(-"#chr",-"pos(1-based)")%>%
filter(phyloP100way_vertebrate>3 | outcome == 0)%>%
dplyr::select(-select_analytics_cons)
, importance="impurity", min.node.size=10, mtry=5, num.trees = 2000)
dataset_train2_complete$predicted<-predict(model1, dataset_train2_complete )$predictions
dataset_train2_complete$predicted_cons<-predict(model1_cons, dataset_train2_complete )$predictions
dataset_train2_complete$predicted_int<-predict(model_int, dataset_train2_complete )$predictions
dataset_train2_complete$predicted_sec<-predict(model_sec, dataset_train2_complete )$predictions
dataset_train2_complete$predicted_acc<-predict(model_acc, dataset_train2_complete )$predictions
dataset_train2_complete$predicted_con<-predict(model_con, dataset_train2_complete )$predictions
dataset_val_complete$predicted<-predict(model_int, dataset_val_complete )$predictions
dataset_val_complete$predicted_int<-predict(model_int, dataset_val_complete )$predictions
dataset_val_complete$predicted_sec<-predict(model_sec, dataset_val_complete )$predictions
dataset_val_complete$predicted_acc<-predict(model_acc, dataset_val_complete )$predictions
dataset_val_complete$predicted_con<-predict(model_con, dataset_val_complete )$predictions
CV_test_complete$predicted<-predict(model1, CV_test_complete )$predictions
#CV_test_complete$predicted_cons<-predict(model1_cons, CV_test_complete )$predictions
CV_test_complete$predicted_int<-predict(model_int, CV_test_complete )$predictions
CV_test_complete$predicted_sec<-predict(model_sec, CV_test_complete )$predictions
CV_test_complete$predicted_acc<-predict(model_acc, CV_test_complete )$predictions
CV_test_complete$predicted_con<-predict(model_con, CV_test_complete )$predictions
#plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_cons), print.auc = TRUE, col = "red")
plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_int), print.auc = TRUE, col = "red")
plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_sec), print.auc = TRUE, col = "red")
plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_acc), print.auc = TRUE, col = "red")
plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_con), print.auc = TRUE, col = "red")
library(verification)
model2 <- glm(outcome ~ . + .^2, family=binomial(link='logit'),
data=dataset_train2_complete %>% filter(phyloP100way_vertebrate>3 | outcome==0) %>% dplyr::select(outcome, predicted_int, predicted_sec,predicted_acc, predicted_con ) %>%
filter(complete.cases(.)))
#plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_cons), print.auc = TRUE, col = "red")
plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_int), print.auc = TRUE, col = "red")
plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_sec), print.auc = TRUE, col = "red")
plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_acc), print.auc = TRUE, col = "red")
plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_con), print.auc = TRUE, col = "red")
library(verification)
model2 <- glm(outcome ~ . + .^2, family=binomial(link='logit'),
data=dataset_train2_complete %>% filter(phyloP100way_vertebrate>3 | outcome==0) %>% dplyr::select(outcome, predicted_int, predicted_sec,predicted_acc, predicted_con ) %>%
filter(complete.cases(.)))
dataset_val_complete$predicted2 <- predict(model2, dataset_val_complete)
roc.plot(dataset_val_complete$outcome, data.matrix(dataset_val_complete[c("CADD_raw", "predicted", "predicted2")]) )
auc(dataset_val_complete$outcome, dataset_val_complete$predicted)
auc(dataset_val_complete$outcome, dataset_val_complete$predicted2)
coords(roc(dataset_val_complete$outcome, dataset_val_complete$predicted2),1:10)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted), print.auc = TRUE,
col = "green", print.auc.y = .4, add = TRUE)
#plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_cons), print.auc = TRUE, col = "red")
plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_int), print.auc = TRUE, col = "red")
plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_sec), print.auc = TRUE, col = "red")
plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_acc), print.auc = TRUE, col = "red")
plot(roc(CV_test_complete$outcome, CV_test_complete$predicted_con), print.auc = TRUE, col = "red")
model2 <- glm(outcome ~ . + .^2, family=binomial(link='logit'),
data=dataset_train2_complete %>% filter(phyloP100way_vertebrate>3 | outcome==0) %>% dplyr::select(outcome, predicted_int, predicted_sec,predicted_acc, predicted_con ) %>%
filter(complete.cases(.)))
dataset_val_complete$predicted2 <- predict(model2, dataset_val_complete)
roc.plot(dataset_val_complete$outcome, data.matrix(dataset_val_complete[c("CADD_raw", "predicted", "predicted2")]) )
auc(dataset_val_complete$outcome, dataset_val_complete$predicted)
auc(dataset_val_complete$outcome, dataset_val_complete$predicted2)
coords(roc(dataset_val_complete$outcome, dataset_val_complete$predicted2),1:10)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted), print.auc = TRUE,
col = "green", print.auc.y = .4, add = TRUE)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted2), print.auc = TRUE,
col = "blue", print.auc.y = .6, add = TRUE)
CV_test_complete$predicted2<-predict(model2, CV_test_complete )
roc_rose <- plot(roc(CV_test_complete$outcome, CV_test_complete$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(CV_test_complete$outcome, CV_test_complete$predicted), print.auc = TRUE,
col = "green", print.auc.y = .4, add = TRUE)
roc_rose <- plot(roc(CV_test_complete$outcome, CV_test_complete$predicted2), print.auc = TRUE,
col = "blue", print.auc.y = .6, add = TRUE)
CV_test_complete_temp_train<-CV_test_complete %>% filter(!gene %in% cv_18_prot$gene, gene %in% cv_ids21prot$gene, !key_var_id %in% cv_18_prot$key_var_id)
train3 <- sample(unique(CV_test_complete_temp_train$gene), 0.5*length(unique(CV_test_complete_temp_train$gene)), replace = FALSE)
CV_test_complete_temp_train<-CV_test_complete_temp_train[CV_test_complete_temp_train$gene %in% train3,]
train3<-which(CV_test_complete$key_var_id %in% CV_test_complete_temp_train$key_var_id)
model5 <- glm(outcome ~  .  , family=binomial(link='logit'),
data=dataset_val_complete %>% filter(phyloP100way_vertebrate>9 | outcome==0) %>% dplyr::select(outcome,  predicted_int, predicted_con, predicted_sec, predicted_acc, CADD_raw) %>%
filter(complete.cases(.)))
CV_test_complete$predicted5<-predict(model5, CV_test_complete)
model3 <- glm(outcome ~ .*. , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome, predicted, predicted_con,  CADD_raw) %>%
filter(complete.cases(.)))
model4 <- glm(outcome ~  .*. , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome,   CADD_raw) %>%
filter(complete.cases(.)))
model3 <- glm(outcome ~ .*. , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome, predicted_int, predicted_con, predicted_sec, predicted_acc, CADD_raw) %>%
filter(complete.cases(.)))
model4 <- glm(outcome ~  .*. , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome,   CADD_raw) %>%
filter(complete.cases(.)))
model5 <- glm(outcome ~ .*. , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome, b_factor,  CADD_raw) %>%
filter(complete.cases(.)))
dataset_val_complete$predicted3<-predict(model3, dataset_val_complete )
dataset_val_complete$predicted4<-predict(model4, dataset_val_complete )
#roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$REVEL_score), print.auc = TRUE,
col = "green", print.auc.y = .4)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6, add = TRUE)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
CV_test_complete$predicted3<-predict(model3, CV_test_complete )#$predictions
CV_test_complete$predicted4<-predict(model4, CV_test_complete )#$predictions
CV_test_complete$predicted5<-predict(model5, CV_test_complete)
rarer_clinvar<-read_tsv("/media/axel/Dateien/Arbeit_Gen/TNAMSE_Paper/turro_gene_list/3plot_it/clinvar_rarer_genes4.tsv")
clinvar_new<-read_tsv("/media/axel/Dateien/Arbeit_Gen/TNAMSE_Paper/turro_gene_list/3plot_it/clinvar_new.tsv")
CV_test_complete_temp<-CV_test_complete[-train3,]# %>% filter(pLI<0.9)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(gene %in% clinvar_new$HGNC_gene_name)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(gene %in% rarer_clinvar$HGNC_gene_name)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(!gene %in% cv_18_prot$gene, gene %in% cv_ids21prot$gene,  !key_var %in% cv_18_prot$key_var, !key_var_id %in% cv_18_vars$key_var_id)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
model3 <- glm(outcome ~ . , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome, predicted_int, predicted_con, predicted_sec, predicted_acc, CADD_raw) %>%
filter(complete.cases(.)))
model4 <- glm(outcome ~  . , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome,   CADD_raw) %>%
filter(complete.cases(.)))
model5 <- glm(outcome ~ . , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome, b_factor,  CADD_raw) %>%
filter(complete.cases(.)))
dataset_val_complete$predicted3<-predict(model3, dataset_val_complete )
dataset_val_complete$predicted4<-predict(model4, dataset_val_complete )
#roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$REVEL_score), print.auc = TRUE,
col = "green", print.auc.y = .4)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6, add = TRUE)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
CV_test_complete$predicted3<-predict(model3, CV_test_complete )#$predictions
CV_test_complete$predicted4<-predict(model4, CV_test_complete )#$predictions
CV_test_complete$predicted5<-predict(model5, CV_test_complete)
rarer_clinvar<-read_tsv("/media/axel/Dateien/Arbeit_Gen/TNAMSE_Paper/turro_gene_list/3plot_it/clinvar_rarer_genes4.tsv")
clinvar_new<-read_tsv("/media/axel/Dateien/Arbeit_Gen/TNAMSE_Paper/turro_gene_list/3plot_it/clinvar_new.tsv")
CV_test_complete_temp<-CV_test_complete[-train3,]# %>% filter(pLI<0.9)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(gene %in% clinvar_new$HGNC_gene_name)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(gene %in% rarer_clinvar$HGNC_gene_name)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(!gene %in% cv_18_prot$gene, gene %in% cv_ids21prot$gene,  !key_var %in% cv_18_prot$key_var, !key_var_id %in% cv_18_vars$key_var_id)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted), print.auc = TRUE,
col = "blue", print.auc.y = .2, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted2), print.auc = TRUE,
col = "blue", print.auc.y = .2, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted2), print.auc = TRUE,
col = "blue", print.auc.y = .2, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted_con), print.auc = TRUE,
col = "green", print.auc.y = .1, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted5), print.auc = TRUE,
col = "yellow", print.auc.y = .5, add = TRUE)
cv_all<-clinvar_variants[complete.cases(clinvar_variants %>% dplyr::select( colnames(dataset_train)[colnames(dataset_train) %in% select_merged])),]
cv_all$predicted<-predict(model1, cv_all )$predictions
cv_all$predicted_con<-predict(model_con, cv_all )$predictions
#cv_all$predicted2<-predict(model2, cv_all )
cv_all$predicted3<-predict(model3, cv_all )
cv_all$predicted4<-predict(model4, cv_all )
cv_all$predicted5<-predict(model5, cv_all )
#roc_rose <- plot(roc(cv_all$outcome, cv_all$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(cv_all$outcome, cv_all$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .4)
roc_rose <- plot(roc(cv_all$outcome, cv_all$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .6, add = TRUE)
roc_rose <- plot(roc(cv_all$outcome, cv_all$predicted5), print.auc = TRUE,
col = "blue", print.auc.y = .2, add = TRUE)
roc_rose <- plot(roc(cv_all$outcome, cv_all$predicted), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
roc_rose <- plot(roc(cv_all$outcome, cv_all$predicted_con), print.auc = TRUE,
col = "brown", print.auc.y = .1, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted_con), print.auc = TRUE,
col = "green", print.auc.y = .1, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted5), print.auc = TRUE,
col = "yellow", print.auc.y = .5, add = TRUE)
model5
model5 <- glm(outcome ~  .  , family=binomial(link='logit'),
data=dataset_val_complete %>% filter(phyloP100way_vertebrate>9 | outcome==0) %>% dplyr::select(outcome,  predicted_int, predicted_con, predicted_sec, predicted_acc, CADD_raw) %>%
filter(complete.cases(.)))
model5
model5 <- glm(outcome ~  .  , family=binomial(link='logit'),
data=dataset_val_complete %>% filter(phyloP100way_vertebrate>5 | outcome==0) %>% dplyr::select(outcome,  predicted_int, predicted_con, predicted_sec, predicted_acc, CADD_raw) %>%
filter(complete.cases(.)))
model5
model5 <- glm(outcome ~  .  , family=binomial(link='logit'),
data=dataset_val_complete %>% filter(phyloP100way_vertebrate>5 | outcome==0) %>% dplyr::select(outcome,  predicted_int, predicted_con, predicted_sec, predicted_acc, CADD_raw) %>%
filter(complete.cases(.)))
CV_test_complete$predicted5<-predict(model5, CV_test_complete)
model3 <- glm(outcome ~ . , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome, predicted_int, predicted_con, predicted_sec, predicted_acc, CADD_raw) %>%
filter(complete.cases(.)))
model4 <- glm(outcome ~  . , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome,   CADD_raw) %>%
filter(complete.cases(.)))
model5 <- glm(outcome ~ . , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome, b_factor,  CADD_raw) %>%
filter(complete.cases(.)))
dataset_val_complete$predicted3<-predict(model3, dataset_val_complete )
dataset_val_complete$predicted4<-predict(model4, dataset_val_complete )
#roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$REVEL_score), print.auc = TRUE,
col = "green", print.auc.y = .4)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6, add = TRUE)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
CV_test_complete$predicted3<-predict(model3, CV_test_complete )#$predictions
CV_test_complete$predicted4<-predict(model4, CV_test_complete )#$predictions
CV_test_complete$predicted5<-predict(model5, CV_test_complete)
cv_all$predicted5<-predict(model5, cv_all )
roc_rose <- plot(roc(cv_all$outcome, cv_all$predicted_con), print.auc = TRUE,
col = "brown", print.auc.y = .1, add = TRUE)
#roc_rose <- plot(roc(cv_all$outcome, cv_all$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(cv_all$outcome, cv_all$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .4)
#cv_all$predicted2<-predict(model2, cv_all )
cv_all$predicted3<-predict(model3, cv_all )
cv_all<-clinvar_variants[complete.cases(clinvar_variants %>% dplyr::select( colnames(dataset_train)[colnames(dataset_train) %in% select_merged])),]
cv_all$predicted<-predict(model1, cv_all )$predictions
cv_all$predicted_con<-predict(model_con, cv_all )$predictions
#cv_all$predicted2<-predict(model2, cv_all )
cv_all$predicted3<-predict(model3, cv_all )
cv_all$predicted4<-predict(model4, cv_all )
cv_all$predicted5<-predict(model5, cv_all )
#roc_rose <- plot(roc(cv_all$outcome, cv_all$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(cv_all$outcome, cv_all$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .4)
model1<-ranger(outcome ~ . , data=dataset_train %>% dplyr::select(-"#chr",-"pos(1-based)")%>%
filter(phyloP100way_vertebrate>3 | outcome == 0)%>%
dplyr::select(-select_analytics_cons)
, importance="impurity", min.node.size=20, mtry=8, num.trees = 5000)
dataset_train2_complete$predicted<-predict(model1, dataset_train2_complete )$predictions
dataset_val_complete$predicted<-predict(model_int, dataset_val_complete )$predictions
CV_test_complete$predicted<-predict(model1, CV_test_complete )$predictions
plot(roc(CV_test_complete$outcome, CV_test_complete$predicted), print.auc = TRUE, col = "red")
library(verification)
model2 <- glm(outcome ~ . + .^2, family=binomial(link='logit'),
data=dataset_train2_complete %>% filter(phyloP100way_vertebrate>3 | outcome==0) %>% dplyr::select(outcome, predicted_int, predicted_sec,predicted_acc, predicted_con ) %>%
filter(complete.cases(.)))
dataset_val_complete$predicted2 <- predict(model2, dataset_val_complete)
roc.plot(dataset_val_complete$outcome, data.matrix(dataset_val_complete[c("CADD_raw", "predicted", "predicted2")]) )
dataset_val_complete
auc(dataset_val_complete$outcome, dataset_val_complete$predicted)
auc(dataset_val_complete$outcome, dataset_val_complete$predicted2)
dataset_val_complete$predicted<-predict(model1, dataset_val_complete )$predictions
auc(dataset_val_complete$outcome, dataset_val_complete$predicted)
roc.plot(dataset_val_complete$outcome, data.matrix(dataset_val_complete[c("CADD_raw", "predicted", "predicted2")]) )
auc(dataset_val_complete$outcome, dataset_val_complete$predicted)
auc(dataset_val_complete$outcome, dataset_val_complete$predicted2)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted), print.auc = TRUE,
col = "green", print.auc.y = .4, add = TRUE)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted2), print.auc = TRUE,
col = "blue", print.auc.y = .6, add = TRUE)
CV_test_complete$predicted2<-predict(model2, CV_test_complete )
roc_rose <- plot(roc(CV_test_complete$outcome, CV_test_complete$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(CV_test_complete$outcome, CV_test_complete$predicted), print.auc = TRUE,
col = "green", print.auc.y = .4, add = TRUE)
roc_rose <- plot(roc(CV_test_complete$outcome, CV_test_complete$predicted2), print.auc = TRUE,
col = "blue", print.auc.y = .6, add = TRUE)
CV_test_complete_temp_train<-CV_test_complete %>% filter(!gene %in% cv_18_prot$gene, gene %in% cv_ids21prot$gene, !key_var_id %in% cv_18_prot$key_var_id)
train3 <- sample(unique(CV_test_complete_temp_train$gene), 0.5*length(unique(CV_test_complete_temp_train$gene)), replace = FALSE)
CV_test_complete_temp_train<-CV_test_complete_temp_train[CV_test_complete_temp_train$gene %in% train3,]
train3<-which(CV_test_complete$key_var_id %in% CV_test_complete_temp_train$key_var_id)
model5 <- glm(outcome ~  .  , family=binomial(link='logit'),
data=dataset_val_complete %>% filter(phyloP100way_vertebrate>5 | outcome==0) %>% dplyr::select(outcome,  predicted_int, predicted_con, predicted_sec, predicted_acc, CADD_raw) %>%
filter(complete.cases(.)))
model3 <- glm(outcome ~ . , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome, predicted_int, predicted_con, predicted_sec, predicted_acc, CADD_raw) %>%
filter(complete.cases(.)))
model4 <- glm(outcome ~  . , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome,   CADD_raw) %>%
filter(complete.cases(.)))
model5 <- glm(outcome ~ . , family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome,predicted_int, predicted_con, predicted_sec, predicted_acc) %>%
filter(complete.cases(.)))
dataset_val_complete$predicted3<-predict(model3, dataset_val_complete )
dataset_val_complete$predicted4<-predict(model4, dataset_val_complete )
#roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$REVEL_score), print.auc = TRUE,
col = "green", print.auc.y = .4)
dataset_val_complete$predicted5<-predict(model5, dataset_val_complete )
#roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$REVEL_score), print.auc = TRUE,
col = "green", print.auc.y = .4)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6, add = TRUE)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
CV_test_complete$predicted3<-predict(model3, CV_test_complete )#$predictions
CV_test_complete$predicted4<-predict(model4, CV_test_complete )#$predictions
CV_test_complete$predicted5<-predict(model5, CV_test_complete)
rarer_clinvar<-read_tsv("/media/axel/Dateien/Arbeit_Gen/TNAMSE_Paper/turro_gene_list/3plot_it/clinvar_rarer_genes4.tsv")
clinvar_new<-read_tsv("/media/axel/Dateien/Arbeit_Gen/TNAMSE_Paper/turro_gene_list/3plot_it/clinvar_new.tsv")
CV_test_complete_temp<-CV_test_complete[-train3,]# %>% filter(pLI<0.9)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(gene %in% clinvar_new$HGNC_gene_name)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(gene %in% rarer_clinvar$HGNC_gene_name)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(!gene %in% cv_18_prot$gene, gene %in% cv_ids21prot$gene,  !key_var %in% cv_18_prot$key_var, !key_var_id %in% cv_18_vars$key_var_id)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted2), print.auc = TRUE,
col = "blue", print.auc.y = .2, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted5), print.auc = TRUE,
col = "yellow", print.auc.y = .5, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted2), print.auc = TRUE,
col = "blue", print.auc.y = .2, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted2), print.auc = TRUE,
col = "blue", print.auc.y = .2, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted2), print.auc = TRUE,
col = "blue", print.auc.y = .2, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted_con), print.auc = TRUE,
col = "green", print.auc.y = .1, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted5), print.auc = TRUE,
col = "green", print.auc.y = .5, add = TRUE)
#roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$REVEL_score), print.auc = TRUE,
col = "green", print.auc.y = .4)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6, add = TRUE)
model5 <- glm(outcome ~ . * ., family=binomial(link='logit'),
data=CV_test_complete[train3,] %>% dplyr::select(outcome,predicted, predicted_con) %>%
filter(complete.cases(.)))
dataset_val_complete$predicted3<-predict(model3, dataset_val_complete )
dataset_val_complete$predicted4<-predict(model4, dataset_val_complete )
dataset_val_complete$predicted5<-predict(model5, dataset_val_complete )
#roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$REVEL_score), print.auc = TRUE,
col = "green", print.auc.y = .4)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6, add = TRUE)
roc_rose <- plot(roc(dataset_val_complete$outcome, dataset_val_complete$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
CV_test_complete$predicted3<-predict(model3, CV_test_complete )#$predictions
CV_test_complete$predicted4<-predict(model4, CV_test_complete )#$predictions
CV_test_complete$predicted5<-predict(model5, CV_test_complete)
rarer_clinvar<-read_tsv("/media/axel/Dateien/Arbeit_Gen/TNAMSE_Paper/turro_gene_list/3plot_it/clinvar_rarer_genes4.tsv")
clinvar_new<-read_tsv("/media/axel/Dateien/Arbeit_Gen/TNAMSE_Paper/turro_gene_list/3plot_it/clinvar_new.tsv")
CV_test_complete_temp<-CV_test_complete[-train3,]# %>% filter(pLI<0.9)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(gene %in% clinvar_new$HGNC_gene_name)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(gene %in% rarer_clinvar$HGNC_gene_name)
CV_test_complete_temp<-CV_test_complete[-train3,] %>% filter(!gene %in% cv_18_prot$gene, gene %in% cv_ids21prot$gene,  !key_var %in% cv_18_prot$key_var, !key_var_id %in% cv_18_vars$key_var_id)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted3), print.auc = TRUE,
col = "black", print.auc.y = .6)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted4), print.auc = TRUE,
col = "orange", print.auc.y = .3, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted2), print.auc = TRUE,
col = "blue", print.auc.y = .2, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted_con), print.auc = TRUE,
col = "green", print.auc.y = .1, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted5), print.auc = TRUE,
col = "green", print.auc.y = .5, add = TRUE)
roc_rose <- plot(roc(CV_test_complete_temp$outcome, CV_test_complete_temp$predicted5), print.auc = TRUE,
col = "green", print.auc.y = .5, add = TRUE)
log(10)
log10(10)
log10(2)
10^-2
10^-2.2
10^-2.4
10^-3
720*7
720*7*2
library(ggplot2)
library(tidyverse)
file.size("aaaa")
file.size("aaaa")>10
file.size("empty.txt")
library(data.table)
library(tidyverse)
library(parallel)
file.info("annotated_variants_rare.csv")
source('/media/axel/Dateien/Arbeit_Gen/alphafold2/data_from_xcat_v2/series_xgboost/prediction.R')
library(ranger)
?ranger
setwd("/media/axel/Dateien/Arbeit_Gen/alphafold2/git_version/AlphScore/analysis/data/prediction/base_model_importance.pdf")
setwd("/media/axel/Dateien/Arbeit_Gen/alphafold2/git_version/AlphScore/analysis/")
library(tidyverse)
library(pROC)
test_dataset2<-read_csv("data/prediction/abc_test_dataset2.csv.gz")
validation_dataset<-read_csv("data/prediction/base_model_validation_set.csv.gz")
test_dataset2$multi<-!grepl(fixed("F1-"), test_dataset2$pdb_file)
ggplot(test_dataset2)+
geom_point(aes(x=predicted, y=CADD_raw, color=multi), alpha=0.3)+
facet_wrap(~outcome)
ggplot(test_dataset2)+
geom_histogram(aes(x=predicted, fill=outcome==1))+
facet_wrap(~multi, scales = "free_y")
ggplot(test_dataset2)+
geom_histogram(aes(x=predicted, fill=outcome==1))+
facet_wrap(~protein_mean_b_factor>80)
ggplot(test_dataset2)+
geom_histogram(aes(x=predicted, fill=outcome==1))+
facet_wrap(~protein_length>1000 )
ggplot(test_dataset2)+
geom_histogram(aes(x=predicted, fill=outcome==1))+
facet_wrap(~pLI>0.5 )
ggplot(test_dataset2)+
geom_histogram(aes(x=CADD_raw, fill=outcome==1))
validation_dataset<-validation_dataset[is.na(validation_dataset$gnomAD_genomes_AC) & is.na(validation_dataset$gnomAD_genomes_AC),]
ggplot(validation_dataset)+
geom_point(aes(x=CADD_raw, y=Score_exp))
ggplot(validation_dataset)+
geom_point(aes(x=predicted, y=Score_exp))
ggplot(validation_dataset)+
geom_point(aes(x=CADD_raw, y=Score_exp))
ggplot(validation_dataset)+
geom_point(aes(x=predicted, y=Score_exp))
ggplot(validation_dataset)+
geom_point(aes(x=CADD_raw, y=Score_exp))
ggplot(validation_dataset)+
geom_point(aes(x=predicted, y=Score_exp))
ggplot(validation_dataset)+
geom_point(aes(x=CADD_raw, y=Score_exp), alpha=0.3)
ggplot(validation_dataset)+
geom_point(aes(x=predicted, y=Score_exp), alpha=0.3)
validation_dataset$outcome<-validation_dataset$Score_exp<0.5
validation_dataset$outcome<-validation_dataset$Score_exp<0.5
ggplot(validation_dataset)+
geom_histogram(aes(x=predicted2, fill=outcome==1))
validation_dataset$outcome<-validation_dataset$Score_exp<0.5
ggplot(validation_dataset)+
geom_histogram(aes(x=CADD_raw, fill=outcome==1))
validation_dataset$outcome<-validation_dataset$Score_exp<0.3
ggplot(validation_dataset)+
geom_histogram(aes(x=predicted, fill=outcome==1))
for_comp<-validation_dataset[,c("Score_exp","predicted")]
for_comp<-for_comp %>% mutate(Score_exp_05=Score_exp<0.3, predicted_05=predicted>0.5)
table(for_comp[,c("Score_exp_05","predicted_05")])
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted2), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted2), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$REVEL_score), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$REVEL_score), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted2), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$REVEL_score), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted2), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$REVEL_score), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted2), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$REVEL_score), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$predicted2), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$CADD_raw), print.auc = TRUE, col = "red")
roc_rose <- plot(roc(validation_dataset$outcome, validation_dataset$REVEL_score), print.auc = TRUE, col = "red")
View(test_dataset2)
View(test_dataset2)
