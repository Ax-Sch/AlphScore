import pandas as pd

grid_search_table=pd.read_csv(filepath_or_buffer="config/grid_search.tsv", sep="\t").astype(str)
# testing
grid_search_table=grid_search_table.iloc[[0,1]]


#!/bin/bash
# The first two scripts need to be run to be able to run the prediction.
# To see the command line options of the 01_prediction script, add the --help flag.

#Rscript 01_create_validation_set.R # input: "../extract_features/data/train_testset1/gnomad_extracted.csv.gz"
#Rscript scripts/01_preprocess.R -i /media/axel/Dateien/Arbeit_Gen/alphafold2/data_from_xcat_v2/gnomad_extracted_v2.csv.gz ### REPLACE this path with your relative path
#Rscript scripts/01_preprocess.R -i data/validation/validation_set.csv.gz
#Rscript scripts/02_recalibrate_variants.R
#Rscript scripts/03_prediction.R -w TRUE -v data/preprocess/validation_set.csv.gzpreprocessed.csv.gz


rule all:
	input:
		expand("data/prediction/{prefix}_results.tsv", prefix=grid_search_table["prefix"].to_list()),
		"data/joined_grid/joined_grid.tsv",
		"data/prediction/final_written_full_model.RData",
		"data/validation_set/values_joined.csv.gz",
		"data/validation_set/values_joined_prepro.csv.gz",
		"data/validation_set/values_joined_prepro_AlphScore.csv.gz"

rule preprocess:
	input:
		"{base_name}.csv.gz"
	output:
		"{base_name}_prepro.csv.gz"
	resources: cpus=1, mem_mb=18000, time_job=480
	params:
		partition='short'
	shell:
		"""
		Rscript scripts/01_preprocess.R -i {input} -o {output}
		"""


rule recalibrate:
	input:
		"{base_name}_prepro.csv.gz"
	output:
		"{base_name}_prepro_rec.csv.gz"
	resources: cpus=1, mem_mb=18000, time_job=480
	params:
		partition='short'
	shell:
		"""
		Rscript scripts/02_recalibrate_variants.R -i {input} -o {output}
		"""

rule generate_grid:
	input:
		"config/available_colnames_W_surr.xlsx",
		"../extract_features/data/train_testset1/gnomad_extracted_prepro_rec.csv.gz"
	output:
		"data/prediction/{prefix}_results.tsv"
	resources: cpus=6, mem_mb=24000, time_job=480
	params:
		partition='short'
	run:
		import os
		parameters=grid_search_table[grid_search_table["prefix"]==wildcards[0]]
		os.system('Rscript scripts/03_prediction.R --prefix ' + 
			wildcards[0] + " --csv_location " + input[1] + 
			" " + " ".join(parameters.iloc[0,1:].to_list()))

rule join_grid_files:
	input:
		expand("data/prediction/{prefix}_results.tsv", prefix=grid_search_table["prefix"].to_list()),
	output:
		"data/joined_grid/joined_grid.tsv"
	resources: cpus=1, mem_mb=18000, time_job=480
	params:
		partition='short'
	shell:
		"""
		mkdir -p "data/joined_grid"
		cat {input} | tail -n3 | grep "auc_Alph_train_gnomAD" > {output}
		cat {input} | grep -v "auc_Alph_train_gnomAD" >> {output}
		"""


rule write_final_model:
	input:
		"config/available_colnames_W_surr.xlsx",
		"data/recalibrate/gnomad_extracted_prepro_rec.csv.gz"
	output:
		#"data/prediction/pre_final_model_results.tsv",
		"data/prediction/final_written_full_model.RData",
		"data/prediction/final_toAS_properties.RData",
		"data/prediction/final_colnames_to_use.RData",
	resources: cpus=8, mem_mb=30000, time_job=480
	params:
		partition='short'
	shell:
		"""
#		Rscript scripts/03_prediction.R \
#		--prefix pre_final_model \
#		--excel_location config/available_colnames_W_surr.xlsx \
#		--method_pred extratree \
#		--num_trees_param 500 \###### CHANGE
#		--max_depth_param 6 \
#		--min_node_param 10 \
#		--cor_param 0.999999 \
#		--b_factor_param 60 \
#		--eta_param 0 \
#		--subsample_param 0 \
#		--min_child_weight_param 0 \
#		--gamma_param 0 \
#		--k_fold_cross_val TRUE

		Rscript scripts/03_prediction.R \
		--prefix final \
		--excel_location config/available_colnames_W_surr.xlsx \
		--method_pred extratree \
		--num_trees_param 200 \
		--max_depth_param 6 \
		--min_node_param 10 \
		--cor_param 0.999999 \
		--b_factor_param 60 \
		--eta_param 0 \
		--subsample_param 0 \
		--min_child_weight_param 0 \
		--gamma_param 0 \
		--full_model TRUE
		"""

rule create_validation_set:
	input:
		"resources_validation/"
	output:
		compiled="data/validation_set/values_joined.csv.gz",
	resources: cpus=1, mem_mb=18000, time_job=480
	params:
		partition='short'
	shell:
		"""
		Rscript scripts/05_compile_scores.R
		"""

rule predict_alph:
	input:
		csv="data/validation_set/values_joined_prepro.csv.gz",
		model="data/prediction/final_written_full_model.RData",
		to_AS="data/prediction/final_toAS_properties.RData",
		colnames="data/prediction/final_colnames_to_use.RData",
	output:
		"data/validation_set/values_joined_prepro_AlphScore.csv.gz"
	resources: cpus=1, mem_mb=18000, time_job=480
	params:
		partition='short'
	shell:
		"""
		Rscript scripts/06_predict_w_ranger_model.R \
		--csv_location {input.csv} \
		--model_location {input.model} \
		--output_file {output} \
		--use_cols_file {input.colnames} \
		--toAS_properties {input.to_AS}
		"""


