#! /usr/bin/env python

# Convert .sitedataaf file to .score

import sys,os
from feature.statfile import StatFile
from feature.scorefile import ScoreFile

if __name__ == "__main__":
    import getopt
    def eusage():
        print "Usage: %s [INFILE] [OUTFILE]" % os.path.basename(sys.argv[0])
        print """
Options:
    -n NUMBINS, --numbins=NUMBINS
        Sets the number of bins
    -s SITEPRIOR, --siteprior=SITEPRIOR
        Sets the P(site). P(nonsite) = 1-P(site)
    -h, --help
        Display usage
"""
        sys.exit(1)

    infilename, outfilename = ('-', '-')
    args = sys.argv[1:]
    options = {}
    try:
        optlist,args = getopt.getopt(args,'hs:n:',['help','siteprior=','numbins='])
    except getopt.GetoptError:
        eusage()
    for opt,arg in optlist:
        if opt in ('-h','--help'):
            eusage()
        if opt in ('-s','--siteprior'):
            options['pSite'] = float(arg)
            options['pNonSite'] = 1-options['pSite']
        if opt in ('-n','--numbins'):
            options['numBins'] = int(arg)
    if len(args) > 0:
        infilename = args[0]
    if len(args) > 1:
        outfilename = args[1]
    if len(args) > 2:
        eusage()

    if infilename == '-':
        infh = sys.stdin
    else:
        infh = file(infilename)
    if outfilename == '-':
        outfh = sys.stdout
    else:
        outfh = file(outfilename,'w')

    statfile = StatFile(fh=infh)
    scorefile = ScoreFile().convert(statfile,**options)
    scorefile.write(outfh)
